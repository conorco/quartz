# trucs qui marchent pas

## On lit les donn√©es en GeoDataFrame
import geopandas as gpd
import numpy as np
from shapely.geometry import Point
# import shapely.geometry
# from shapely.geometry import Polygon
#
# df = geopandas.read_file("geometries.json")
# lat_point_list = [46.384215727080694, 46.42583525049556, 46.40743997749065]
# lon_point_list = [24.66499565544466, 24.699163210220682, 24.706980760567422]
#
# polygon_geom = Polygon(zip(lat_point_list, lon_point_list))
# df1 = geopandas.GeoSeries({'geometry': polygon_geom}).set_crs(4326)
#
# for geo in df["geometry"]:
#     ctr = geopandas.GeoSeries({'geometry': geo}).set_crs(4326)
#     if ctr.intersects(df1)[0]:
#         print(ctr)

# polygon_geom = Polygon(zip(lon_point_list,lat_point_list))
# df1 = gpd.GeoDataFrame({'geometry':[polygon_geom]})
# for geo in df["geometry"]:
#     if geo.intersects(df1.geometry[0]):
#         print(geo)
# POLYGON ((24.14861107 46.46777725, 24.63750076 46.5633316, 24.69666672 46.41916656, 24.20750046 46.32361221, 24.14861107 46.46777725))

## convertir en GeoJson
import csv, json
from geojson import Feature, FeatureCollection, Point

features = []
with open("data-pm-sasdie-bus.csv", newline='') as csvfile:
    reader = csv.reader(csvfile, delimiter=';')
    for long1, lat1, long2, lat2, start_date, stop_date, pm, *rest in reader:
        latitude = (float(lat1)+float(lat2))/2
        longitude = (float(long1)+float(long2))/2
        latitude, longitude = map(float, (latitude, longitude))
        features.append(
            Feature(
                geometry = Point((longitude, latitude)),
                properties = {
                    'start_date': start_date,
                    'stop_date' : stop_date,
                    'pm' : pm
                }
            )
        )

collection = FeatureCollection(features)
with open("data_bus.json", "w") as f:
    f.write('%s' % collection)
#
#
#
# pistes = gpd.read_file("amenagement_cyclable.geojson")
# bus = gpd.read_file("data_bus.json")
